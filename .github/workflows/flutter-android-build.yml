name: Build Flutter Android APK

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    name: Build Android APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version-file: pubspec.yaml

      - name: Install dependencies
        run: flutter pub get

      - name: Run build_runner
        run: flutter pub run build_runner build --delete-conflicting-outputs

      - name: Build release APK
        run: flutter build apk --release

      - name: Rename APK with build date and Run Number
        id: rename_apk # Give this step an ID to reference its outputs
        run: |
          # Ensure the output directory exists for safety
          mkdir -p build/app/outputs/flutter-apk/

          # Construct a unique and descriptive filename including date and run number
          # The run_number is useful to differentiate artifacts from different CI runs
          DATE=$(date +'%Y-%m-%d')
          RUN_NUMBER="${{ github.run_number }}"
          ORIGINAL_APK_PATH="build/app/outputs/flutter-apk/app-release.apk"
          RENAMED_APK_NAME="app-release-${DATE}-build${RUN_NUMBER}.apk"
          RENAMED_APK_PATH="build/app/outputs/flutter-apk/$RENAMED_APK_NAME"

          # Check if the original APK exists before moving
          if [ -f "$ORIGINAL_APK_PATH" ]; then
            mv "$ORIGINAL_APK_PATH" "$RENAMED_APK_PATH"
            echo "Renamed APK to: $RENAMED_APK_PATH"
          else
            echo "Error: app-release.apk not found at $ORIGINAL_APK_PATH"
            exit 1 # Fail the step if the APK is not found
          fi

          # Set the renamed APK path as an output for subsequent steps
          echo "RENAMED_APK_PATH=$RENAMED_APK_PATH" >> "$GITHUB_OUTPUT"
          echo "RENAMED_APK_NAME=$RENAMED_APK_NAME" >> "$GITHUB_OUTPUT"

      # - name: Upload to Google Drive
      #   uses: samuelint/google-drive-upload@v1.1.3
      #   with:
      #     folder_id: 1FqKt0a-G4tMf5ogZ0_pGbtertZ7Sj3Ds
      #     service_account: ${{ secrets.GOOGLE_DRIVE_SERVICE_ACCOUNT }}
      #     source_path: build/app/outputs/flutter-apk/app-release-*.apk

      - name: Upload artifact to Google Drive Shared Drive
        uses: adityak74/google-drive-upload-git-action@main # Use the action
        with:
          credentials: ${{ secrets.GOOGLE_DRIVE_SERVICE_ACCOUNT }}
          folderId: "1FqKt0a-G4tMf5ogZ0_pGbtertZ7Sj3Ds"
          filename: ${{ steps.rename_apk.outputs.RENAMED_APK_PATH }} # Use the exact path from the rename step output
          name: ${{ steps.rename_apk.outputs.RENAMED_APK_NAME }} # Set the name in Google Drive
          overwrite: true # Overwrite if a file with the exact same 'name' exists in Drive

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-release-*.apk
          retention-days: 5
